name: Nova CI-Rescue Auto-Fix

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: "Pull request number to fix (leave empty for manual testing)"
        required: false
        type: string
        default: ""
      triggered_by:
        description: "Who triggered this workflow"
        required: false
        type: string
        default: "manual"
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, master]

permissions:
  contents: write
  pull-requests: write
  issues: write
  checks: write

jobs:
  auto-fix:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run tests to check current status
        id: test_initial
        continue-on-error: true
        run: |
          pytest test_calculator.py -v --tb=short
          echo "test_result=$?" >> $GITHUB_OUTPUT

      - name: Show test results summary
        if: always()
        run: |
          echo "üîç Nova CI-Rescue Test Analysis Summary"
          echo "========================================"
          echo "Branch: ${{ github.ref_name }}"
          echo "Event: ${{ github.event_name }}"
          echo "PR Number: ${{ inputs.pr_number || 'N/A (manual run)' }}"
          echo ""
          echo "Test Results:"
          if [ "${{ steps.test_initial.outputs.test_result }}" = "0" ]; then
            echo "‚úÖ All tests passed - no fixes needed"
          else
            echo "‚ùå Tests failed - ready for Nova CI-Rescue analysis"
            echo ""
            echo "Running tests to show current failures:"
            python -m pytest test_calculator.py -v --tb=short || true
          fi
