{"created": 1755474811.8511753, "duration": 0.027506351470947266, "exitcode": 1, "root": "/workspace", "environment": {}, "summary": {"passed": 16, "failed": 5, "total": 21, "collected": 21}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": ".", "type": "Dir"}]}, {"nodeid": "src", "outcome": "passed", "result": []}, {"nodeid": "tests/test_broken.py", "outcome": "passed", "result": [{"nodeid": "tests/test_broken.py::test_divide_numbers_normal", "type": "Function", "lineno": 17}, {"nodeid": "tests/test_broken.py::test_divide_numbers_by_zero", "type": "Function", "lineno": 23}, {"nodeid": "tests/test_broken.py::test_find_max_normal", "type": "Function", "lineno": 29}, {"nodeid": "tests/test_broken.py::test_find_max_empty", "type": "Function", "lineno": 35}, {"nodeid": "tests/test_broken.py::test_concatenate_strings", "type": "Function", "lineno": 41}, {"nodeid": "tests/test_broken.py::test_calculate_average", "type": "Function", "lineno": 47}, {"nodeid": "tests/test_broken.py::test_get_first_char_normal", "type": "Function", "lineno": 53}, {"nodeid": "tests/test_broken.py::test_get_first_char_empty", "type": "Function", "lineno": 59}, {"nodeid": "tests/test_broken.py::test_sort_list", "type": "Function", "lineno": 64}]}, {"nodeid": "tests/test_fixed.py", "outcome": "passed", "result": [{"nodeid": "tests/test_fixed.py::test_divide_numbers_normal", "type": "Function", "lineno": 17}, {"nodeid": "tests/test_fixed.py::test_divide_numbers_by_zero", "type": "Function", "lineno": 23}, {"nodeid": "tests/test_fixed.py::test_find_max_normal", "type": "Function", "lineno": 30}, {"nodeid": "tests/test_fixed.py::test_find_max_empty", "type": "Function", "lineno": 37}, {"nodeid": "tests/test_fixed.py::test_concatenate_strings", "type": "Function", "lineno": 44}, {"nodeid": "tests/test_fixed.py::test_concatenate_strings_custom_separator", "type": "Function", "lineno": 50}, {"nodeid": "tests/test_fixed.py::test_calculate_average", "type": "Function", "lineno": 56}, {"nodeid": "tests/test_fixed.py::test_calculate_average_empty", "type": "Function", "lineno": 63}, {"nodeid": "tests/test_fixed.py::test_get_first_char_normal", "type": "Function", "lineno": 68}, {"nodeid": "tests/test_fixed.py::test_get_first_char_empty", "type": "Function", "lineno": 75}, {"nodeid": "tests/test_fixed.py::test_sort_list", "type": "Function", "lineno": 80}, {"nodeid": "tests/test_fixed.py::test_sort_list_strings", "type": "Function", "lineno": 92}]}, {"nodeid": "tests", "outcome": "passed", "result": [{"nodeid": "tests/test_broken.py", "type": "Module"}, {"nodeid": "tests/test_fixed.py", "type": "Module"}]}, {"nodeid": ".", "outcome": "passed", "result": [{"nodeid": "src", "type": "Dir"}, {"nodeid": "tests", "type": "Dir"}]}], "tests": [{"nodeid": "tests/test_broken.py::test_divide_numbers_normal", "lineno": 17, "outcome": "passed", "keywords": ["test_divide_numbers_normal", "test_broken.py", "tests", "workspace", ""], "setup": {"duration": 6.579199998668628e-05, "outcome": "passed"}, "call": {"duration": 5.2833000040664047e-05, "outcome": "passed"}, "teardown": {"duration": 5.674999999882857e-05, "outcome": "passed"}}, {"nodeid": "tests/test_broken.py::test_divide_numbers_by_zero", "lineno": 23, "outcome": "failed", "keywords": ["test_divide_numbers_by_zero", "test_broken.py", "tests", "workspace", ""], "setup": {"duration": 4.3957999992016994e-05, "outcome": "passed"}, "call": {"duration": 0.0001089159999878575, "outcome": "failed", "crash": {"path": "/workspace/tests/../src/broken.py", "lineno": 7, "message": "ZeroDivisionError: division by zero"}, "traceback": [{"path": "tests/test_broken.py", "lineno": 27, "message": ""}, {"path": "src/broken.py", "lineno": 7, "message": "ZeroDivisionError"}], "longrepr": "def test_divide_numbers_by_zero():\n        \"\"\"Test division by zero (will fail).\"\"\"\n        with pytest.raises(ValueError):\n>           divide_numbers(10, 0)  # This will crash\n            ^^^^^^^^^^^^^^^^^^^^^\n\ntests/test_broken.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\na = 10, b = 0\n\n    def divide_numbers(a, b):\n        \"\"\"Divide two numbers (has a bug: no zero check).\"\"\"\n>       return a / b  # Bug: will crash if b is 0\n               ^^^^^\nE       ZeroDivisionError: division by zero\n\nsrc/broken.py:7: ZeroDivisionError"}, "teardown": {"duration": 9.216600000172548e-05, "outcome": "passed"}}, {"nodeid": "tests/test_broken.py::test_find_max_normal", "lineno": 29, "outcome": "passed", "keywords": ["test_find_max_normal", "test_broken.py", "tests", "workspace", ""], "setup": {"duration": 3.67499999924803e-05, "outcome": "passed"}, "call": {"duration": 4.329200004349332e-05, "outcome": "passed"}, "teardown": {"duration": 3.862500000195723e-05, "outcome": "passed"}}, {"nodeid": "tests/test_broken.py::test_find_max_empty", "lineno": 35, "outcome": "passed", "keywords": ["test_find_max_empty", "test_broken.py", "tests", "workspace", ""], "setup": {"duration": 4.866699998729018e-05, "outcome": "passed"}, "call": {"duration": 5.4750000003878085e-05, "outcome": "passed"}, "teardown": {"duration": 3.533399996058506e-05, "outcome": "passed"}}, {"nodeid": "tests/test_broken.py::test_concatenate_strings", "lineno": 41, "outcome": "failed", "keywords": ["test_concatenate_strings", "test_broken.py", "tests", "workspace", ""], "setup": {"duration": 5.016599999407845e-05, "outcome": "passed"}, "call": {"duration": 0.0001402090000510725, "outcome": "failed", "crash": {"path": "/workspace/tests/test_broken.py", "lineno": 45, "message": "AssertionError: assert 'HelloWorld' == 'Hello World'\n  \n  - Hello World\n  ?      -\n  + HelloWorld"}, "traceback": [{"path": "tests/test_broken.py", "lineno": 45, "message": "AssertionError"}], "longrepr": "def test_concatenate_strings():\n        \"\"\"Test string concatenation (will fail due to missing space).\"\"\"\n        result = concatenate_strings(\"Hello\", \"World\")\n>       assert result == \"Hello World\"  # Will fail: gets \"HelloWorld\"\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError: assert 'HelloWorld' == 'Hello World'\nE         \nE         - Hello World\nE         ?      -\nE         + HelloWorld\n\ntests/test_broken.py:45: AssertionError"}, "teardown": {"duration": 5.845800001225143e-05, "outcome": "passed"}}, {"nodeid": "tests/test_broken.py::test_calculate_average", "lineno": 47, "outcome": "failed", "keywords": ["test_calculate_average", "test_broken.py", "tests", "workspace", ""], "setup": {"duration": 3.125000000636646e-05, "outcome": "passed"}, "call": {"duration": 6.845900003327188e-05, "outcome": "failed", "crash": {"path": "/workspace/tests/test_broken.py", "lineno": 51, "message": "assert 2 == 2.5"}, "traceback": [{"path": "tests/test_broken.py", "lineno": 51, "message": "AssertionError"}], "longrepr": "def test_calculate_average():\n        \"\"\"Test average calculation (will fail due to integer division).\"\"\"\n        result = calculate_average([1, 2, 3, 4])\n>       assert result == 2.5  # Will fail: gets 2 due to integer division\n        ^^^^^^^^^^^^^^^^^^^^\nE       assert 2 == 2.5\n\ntests/test_broken.py:51: AssertionError"}, "teardown": {"duration": 4.5790999990913406e-05, "outcome": "passed"}}, {"nodeid": "tests/test_broken.py::test_get_first_char_normal", "lineno": 53, "outcome": "passed", "keywords": ["test_get_first_char_normal", "test_broken.py", "tests", "workspace", ""], "setup": {"duration": 4.3124999990595825e-05, "outcome": "passed"}, "call": {"duration": 4.062499999690772e-05, "outcome": "passed"}, "teardown": {"duration": 3.620899997258675e-05, "outcome": "passed"}}, {"nodeid": "tests/test_broken.py::test_get_first_char_empty", "lineno": 59, "outcome": "failed", "keywords": ["test_get_first_char_empty", "test_broken.py", "tests", "workspace", ""], "setup": {"duration": 5.745800001477619e-05, "outcome": "passed"}, "call": {"duration": 3.983300001664247e-05, "outcome": "failed", "crash": {"path": "/workspace/tests/../src/broken.py", "lineno": 29, "message": "IndexError: string index out of range"}, "traceback": [{"path": "tests/test_broken.py", "lineno": 62, "message": ""}, {"path": "src/broken.py", "lineno": 29, "message": "IndexError"}], "longrepr": "def test_get_first_char_empty():\n        \"\"\"Test getting first char of empty string (will fail).\"\"\"\n>       assert get_first_char(\"\") == \"\"  # This will crash\n               ^^^^^^^^^^^^^^^^^^\n\ntests/test_broken.py:62: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ntext = ''\n\n    def get_first_char(text):\n        \"\"\"Get first character of string (has a bug: no empty check).\"\"\"\n>       return text[0]  # Bug: will crash if text is empty\n               ^^^^^^^\nE       IndexError: string index out of range\n\nsrc/broken.py:29: IndexError"}, "teardown": {"duration": 6.566700000121273e-05, "outcome": "passed"}}, {"nodeid": "tests/test_broken.py::test_sort_list", "lineno": 64, "outcome": "failed", "keywords": ["test_sort_list", "test_broken.py", "tests", "workspace", ""], "setup": {"duration": 2.95419999929436e-05, "outcome": "passed"}, "call": {"duration": 8.504099997708181e-05, "outcome": "failed", "crash": {"path": "/workspace/tests/test_broken.py", "lineno": 70, "message": "assert [1, 1, 3, 4, 5] == [3, 1, 4, 1, 5]\n  \n  At index 0 diff: 1 != 3\n  Use -v to get more diff"}, "traceback": [{"path": "tests/test_broken.py", "lineno": 70, "message": "AssertionError"}], "longrepr": "def test_sort_list():\n        \"\"\"Test list sorting (will fail due to mutation).\"\"\"\n        original = [3, 1, 4, 1, 5]\n        sorted_list = sort_list(original)\n        assert sorted_list == [1, 1, 3, 4, 5]\n>       assert original == [3, 1, 4, 1, 5]  # Will fail: original is modified\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       assert [1, 1, 3, 4, 5] == [3, 1, 4, 1, 5]\nE         \nE         At index 0 diff: 1 != 3\nE         Use -v to get more diff\n\ntests/test_broken.py:70: AssertionError"}, "teardown": {"duration": 5.5125000017142156e-05, "outcome": "passed"}}, {"nodeid": "tests/test_fixed.py::test_divide_numbers_normal", "lineno": 17, "outcome": "passed", "keywords": ["test_divide_numbers_normal", "test_fixed.py", "tests", "workspace", ""], "setup": {"duration": 4.93750000032378e-05, "outcome": "passed"}, "call": {"duration": 3.8541000037639606e-05, "outcome": "passed"}, "teardown": {"duration": 3.462499995521284e-05, "outcome": "passed"}}, {"nodeid": "tests/test_fixed.py::test_divide_numbers_by_zero", "lineno": 23, "outcome": "passed", "keywords": ["test_divide_numbers_by_zero", "test_fixed.py", "tests", "workspace", ""], "setup": {"duration": 5.0290999979552e-05, "outcome": "passed"}, "call": {"duration": 3.9375000028485374e-05, "outcome": "passed"}, "teardown": {"duration": 3.341600000794642e-05, "outcome": "passed"}}, {"nodeid": "tests/test_fixed.py::test_find_max_normal", "lineno": 30, "outcome": "passed", "keywords": ["test_find_max_normal", "test_fixed.py", "tests", "workspace", ""], "setup": {"duration": 4.1334000002279936e-05, "outcome": "passed"}, "call": {"duration": 3.166599998394304e-05, "outcome": "passed"}, "teardown": {"duration": 3.2250000003841706e-05, "outcome": "passed"}}, {"nodeid": "tests/test_fixed.py::test_find_max_empty", "lineno": 37, "outcome": "passed", "keywords": ["test_find_max_empty", "test_fixed.py", "tests", "workspace", ""], "setup": {"duration": 3.1750000005104084e-05, "outcome": "passed"}, "call": {"duration": 3.6000000022795575e-05, "outcome": "passed"}, "teardown": {"duration": 3.4041999981582194e-05, "outcome": "passed"}}, {"nodeid": "tests/test_fixed.py::test_concatenate_strings", "lineno": 44, "outcome": "passed", "keywords": ["test_concatenate_strings", "test_fixed.py", "tests", "workspace", ""], "setup": {"duration": 3.158399999847461e-05, "outcome": "passed"}, "call": {"duration": 3.0458000026101217e-05, "outcome": "passed"}, "teardown": {"duration": 3.5624999952688086e-05, "outcome": "passed"}}, {"nodeid": "tests/test_fixed.py::test_concatenate_strings_custom_separator", "lineno": 50, "outcome": "passed", "keywords": ["test_concatenate_strings_custom_separator", "test_fixed.py", "tests", "workspace", ""], "setup": {"duration": 3.4999999968476914e-05, "outcome": "passed"}, "call": {"duration": 3.3459000007951545e-05, "outcome": "passed"}, "teardown": {"duration": 3.424999999879219e-05, "outcome": "passed"}}, {"nodeid": "tests/test_fixed.py::test_calculate_average", "lineno": 56, "outcome": "passed", "keywords": ["test_calculate_average", "test_fixed.py", "tests", "workspace", ""], "setup": {"duration": 4.466600000796461e-05, "outcome": "passed"}, "call": {"duration": 3.183300003684053e-05, "outcome": "passed"}, "teardown": {"duration": 3.279200001315985e-05, "outcome": "passed"}}, {"nodeid": "tests/test_fixed.py::test_calculate_average_empty", "lineno": 63, "outcome": "passed", "keywords": ["test_calculate_average_empty", "test_fixed.py", "tests", "workspace", ""], "setup": {"duration": 3.3708999978898646e-05, "outcome": "passed"}, "call": {"duration": 2.9958000027363596e-05, "outcome": "passed"}, "teardown": {"duration": 3.249999997478881e-05, "outcome": "passed"}}, {"nodeid": "tests/test_fixed.py::test_get_first_char_normal", "lineno": 68, "outcome": "passed", "keywords": ["test_get_first_char_normal", "test_fixed.py", "tests", "workspace", ""], "setup": {"duration": 2.9584000003524125e-05, "outcome": "passed"}, "call": {"duration": 3.2957999962945905e-05, "outcome": "passed"}, "teardown": {"duration": 3.29169999986334e-05, "outcome": "passed"}}, {"nodeid": "tests/test_fixed.py::test_get_first_char_empty", "lineno": 75, "outcome": "passed", "keywords": ["test_get_first_char_empty", "test_fixed.py", "tests", "workspace", ""], "setup": {"duration": 3.8416999984747235e-05, "outcome": "passed"}, "call": {"duration": 3.375000000005457e-05, "outcome": "passed"}, "teardown": {"duration": 2.9625000024680048e-05, "outcome": "passed"}}, {"nodeid": "tests/test_fixed.py::test_sort_list", "lineno": 80, "outcome": "passed", "keywords": ["test_sort_list", "test_fixed.py", "tests", "workspace", ""], "setup": {"duration": 5.041599996502555e-05, "outcome": "passed"}, "call": {"duration": 3.279199995631643e-05, "outcome": "passed"}, "teardown": {"duration": 3.5625000009531504e-05, "outcome": "passed"}}, {"nodeid": "tests/test_fixed.py::test_sort_list_strings", "lineno": 92, "outcome": "passed", "keywords": ["test_sort_list_strings", "test_fixed.py", "tests", "workspace", ""], "setup": {"duration": 3.275000000257933e-05, "outcome": "passed"}, "call": {"duration": 3.33749999867905e-05, "outcome": "passed"}, "teardown": {"duration": 3.191600001173356e-05, "outcome": "passed"}}]}